<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  <!-- 字符编码集过滤器 -->
  <filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	
	<!-- 前端分发器 -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<!-- dispatcherServlet启动后会寻找一个应用程序的WEB-INF目录下的配置文件 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置spring mvc配置文件的位置 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 在这个文件中，一定要读取或包含beans.xml -->
			<param-value>/WEB-INF/config/simple-config.xml</param-value>
		</init-param>
		<!-- 容器启动时  创建 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<!-- 写/ 的话，所有的请求都会被spring mvc的分发器拦截到，所以最好对静态资源单独处理，在spring配置文件中配置 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
  	<!-- <servlet-mapping>
  		<servlet-name>default</servlet-name>
  		<url-pattern>*.png</url-pattern>
  	</servlet-mapping> -->
  	
  	<welcome-file-list>
    	<welcome-file>welcome.jsp</welcome-file>
    </welcome-file-list>
</web-app>
